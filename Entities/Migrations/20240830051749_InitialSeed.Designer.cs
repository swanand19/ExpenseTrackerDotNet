// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240830051749_InitialSeed")]
    partial class InitialSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryID = new Guid("48109215-a887-4fea-a7d2-76c43271530f"),
                            CategoryName = "Transportation"
                        },
                        new
                        {
                            CategoryID = new Guid("24336d36-d18a-4181-9067-f7cf4e952d93"),
                            CategoryName = "Food"
                        },
                        new
                        {
                            CategoryID = new Guid("61cba2c6-f9dc-4bb0-a61c-456c447f3afc"),
                            CategoryName = "Clothing"
                        },
                        new
                        {
                            CategoryID = new Guid("a32ae27a-ea00-4cf0-ab4a-4a3bb74b9147"),
                            CategoryName = "Shopping"
                        });
                });

            modelBuilder.Entity("Entities.Expense", b =>
                {
                    b.Property<Guid>("ExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpenseDescription")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ExpenseValue")
                        .HasColumnType("int");

                    b.HasKey("ExpenseID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Expenses", (string)null);

                    b.HasData(
                        new
                        {
                            ExpenseID = new Guid("6104e09a-2e69-4cc8-8b27-3a9529780f38"),
                            CategoryID = new Guid("48109215-a887-4fea-a7d2-76c43271530f"),
                            ExpenseDate = new DateTime(2024, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpenseDescription = "Petrol cost.",
                            ExpenseValue = 200
                        },
                        new
                        {
                            ExpenseID = new Guid("02efe69c-d59f-4a2c-9baf-11930304f906"),
                            CategoryID = new Guid("24336d36-d18a-4181-9067-f7cf4e952d93"),
                            ExpenseDate = new DateTime(2024, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpenseDescription = "Party with friends",
                            ExpenseValue = 700
                        },
                        new
                        {
                            ExpenseID = new Guid("124352b7-97bf-4aa7-8018-9fb8970d4700"),
                            CategoryID = new Guid("61cba2c6-f9dc-4bb0-a61c-456c447f3afc"),
                            ExpenseDate = new DateTime(2024, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpenseDescription = "Bought some trousers and t-shirts.",
                            ExpenseValue = 1300
                        },
                        new
                        {
                            ExpenseID = new Guid("e1381a0e-6cc9-4906-b87c-ffb003a35e85"),
                            CategoryID = new Guid("a32ae27a-ea00-4cf0-ab4a-4a3bb74b9147"),
                            ExpenseDate = new DateTime(2024, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpenseDescription = "Some groceries",
                            ExpenseValue = 320
                        },
                        new
                        {
                            ExpenseID = new Guid("ce15162b-04c2-4c0f-8535-f4b4ff54a7a6"),
                            CategoryID = new Guid("48109215-a887-4fea-a7d2-76c43271530f"),
                            ExpenseDate = new DateTime(2024, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpenseDescription = "Petrol cost",
                            ExpenseValue = 210
                        });
                });

            modelBuilder.Entity("Entities.Expense", b =>
                {
                    b.HasOne("Entities.Category", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
